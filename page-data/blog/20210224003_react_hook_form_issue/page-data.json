{"componentChunkName":"component---src-templates-blog-js","path":"/blog/20210224003_react_hook_form_issue","result":{"pageContext":{"frontmatter":{"id":"20210224003_react_hook_form_issue","title":"react-hook-form 使用中的注意事项","subtitle":"react-hook-form 使用中的注意事项","subject":"表单","author":"Chris Wei","keywords":"bug;issue","tags":"react-hook-form","category":"疑难杂症","cover":"https://media.inkscape.org/media/resources/file/Ladybug-icon.png","created_when":"2021-02-24","updated_when":"2021-02-24","level":200},"excerpt":" react-hook-form 使用中…\n","html":"<h1>react-hook-form 使用中的注意事项</h1>\n<h2>表单内任意的 <code>button</code> 点击都会触发 <code>submit</code></h2>\n<blockquote>\n<p>在自定义表单组件的时候，任何情况下，都需要避免使用 <code>button</code></p>\n</blockquote>\n<h2>向自己二次封装的表单传入 onSubmit 的时候，需要二次传递，而不能直接作为 <code>handleSubmit</code> 的参数</h2>\n<blockquote>\n<p>正确的方式</p>\n</blockquote>\n<pre><code>export default function LoginForm ({toLogin}) {\n\n  ...\n\n  const onSubmit = (values) => {\n    if (!!toLogin) toLogin(values)\n  }\n  return (\n    &#x3C;FormContainer>\n      &#x3C;form onSubmit={handleSubmit(onSubmit)}>\n  \n  ...\n</code></pre>\n<blockquote>\n<p>错误的方式</p>\n</blockquote>\n<pre><code>export default function LoginForm ({toLogin}) {\n\n  ...\n\n  return (\n    &#x3C;FormContainer>\n      &#x3C;form onSubmit={handleSubmit(toLogin)}>\n  \n  ...\n</code></pre>"}},"staticQueryHashes":["2718502863","3159585216","847266990"]}