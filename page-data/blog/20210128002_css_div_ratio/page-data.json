{"componentChunkName":"component---src-templates-blog-js","path":"/blog/20210128002_css_div_ratio","result":{"pageContext":{"frontmatter":{"id":"20210128002_css_div_ratio","title":"利用padding设置DOM元素的宽高比","subtitle":"在某些场合，需要将DOM元素设置为固定的宽高比，但是又不是固定的尺寸","subject":"响应式布局","author":"Chis Wei","keywords":"padding;z-index;position","tags":"css","category":"经验技巧","cover":null,"created_when":"2021-01-28","updated_when":"2021-01-28","level":300},"excerpt":" 利用padding设置DOM元素的宽高比\n\n `padding`, `z-index`, `position` 概要\n","html":"<h1>利用padding设置DOM元素的宽高比</h1>\n<h2><code>padding</code>, <code>z-index</code>, <code>position</code> 概要</h2>\n<ul>\n<li>元素的 <code>padding</code> 属性，如果取值是 <code>%</code> 的话，<code>%</code>的 基准是父元素的宽度</li>\n<li>元素的 <code>z-index</code> 属性可以决定元素在 <code>z</code> 轴上的显示位置</li>\n<li>元素的 <code>z-index</code> 属性如果要发挥作用，必须具有有效的 <code>position</code>属性</li>\n</ul>\n<h2>经验技巧</h2>\n<ul>\n<li><code>DummyRatioFrame</code> 组件元素是 <code>Container</code> 组件元素的子组件</li>\n<li><code>DummyRatioFrame</code> 的实际高度为 <code>0</code>，而 <code>padding-top</code> 是父元素宽度的 <code>xx%</code>，那么 <code>DummyRatioFrame</code> 就被撑起来，具有一个固定的宽高比</li>\n<li>作为 父组件的 <code>Container</code>，也就具备了固定的宽高比</li>\n<li><code>Container</code> 的其他子组件，可以设置 <code>position</code> 以及 其他定位属性，来取得 <code>Container</code> 的位置，决定自己的位置</li>\n</ul>"}},"staticQueryHashes":["2718502863","3159585216","847266990"]}