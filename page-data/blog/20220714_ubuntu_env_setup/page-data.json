{
    "componentChunkName": "component---src-templates-blog-js",
    "path": "/blog/20220714_ubuntu_env_setup",
    "result": {"pageContext":{"frontmatter":{"id":"20220714_ubuntu_env_setup","title":"Ubuntu 全栈环境配置步骤","subtitle":"如何在 Ubuntu 系统上配置 Docker Compose + NodeJS + Git + Electron","subject":"运维","authors":"Chris Wei","keywords":"环境配置;系统安装","tags":"ubuntu;docker;docker compose;nodejs;git;electron","category":"指导手册","cover":"https://media.inkscape.org/media/resources/file/Koi_carp_2.svg","videos":null,"created_when":"2022-07-14T00:00:00.000Z","updated_when":"2022-07-14T00:00:00.000Z","level":200},"excerpt":"# 准备工作\n\n*   确保板子为出厂状态，必要的时候做固件升级\n\n*   确保板子可以连接网络，有线网络或者 W…\n","html":"<h1>准备工作</h1>\n<ol>\n<li>\n<p>确保板子为出厂状态，必要的时候做固件升级</p>\n</li>\n<li>\n<p>确保板子可以连接网络，有线网络或者 WiFi</p>\n</li>\n<li>\n<p>升级系统基础软件</p>\n</li>\n</ol>\n<pre><code>$ sudo apt update\n$ sudo apt-get update\n$ sudo apt upgrade\n</code></pre>\n<h1>安装 docker</h1>\n<h2>安装</h2>\n<pre><code>$ sudo apt install docker\n$ sudo apt install docker.io\n</code></pre>\n<h2>启动</h2>\n<pre><code>$ sudo systemctl start docker\n</code></pre>\n<h2>设置开机启动</h2>\n<pre><code>$ sudo systemctl enable docker\n</code></pre>\n<h2>检查</h2>\n<pre><code>$ sudo systemctl status docker\n$ sudo docker version\n$ sudo docker images\n$ sudo docker ps\n</code></pre>\n<h1>安装 docker Compose</h1>\n<pre><code>$ sudo curl -L \"https://get.daocloud.io/docker/compose/releases/download/v2.1.1/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n$ sudo chmod +x /usr/local/bin/docker-compose\n$ docker-compose --version\n</code></pre>\n<h1>获取 docker 镜像</h1>\n<pre><code>sudo docker pull node:16.14.0-alpine\nsudo docker pull redis:5.0.7-alpine\nsudo docker pull rabbitmq:3.8.2-alpine\nsudo docker pull postgres:12.1-alpine\nsudo docker pull nginx:1.17.6-alpine\n\nsudo docker images\n</code></pre>\n<h1>安装 git</h1>\n<pre><code>$ sudo apt install git\n$ git --version\n</code></pre>\n<h1>安装 nodejs</h1>\n<pre><code>$ curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -\n</code></pre>\n<p>or</p>\n<pre><code>$ curl -sL https://deb.nodesource.com/setup_lts.x | sudo -E bash -\n</code></pre>\n<pre><code>$ sudo apt-get install -y nodejs\n\n$ node -v\nv16.15.1\n\n$ npm -v\n8.11.0\n</code></pre>\n<h1>安装全局 npm 包</h1>\n<pre><code>$ sudo npm install --location=global yarn\n</code></pre>\n<h1>创建项目目录</h1>\n<ol>\n<li>桌面 Home 目录下创建 projects</li>\n</ol>\n<h1>可选验证 ******</h1>\n<h2>获取源码</h2>\n<ol>\n<li>projects 目录下创建 <code>atlas.clone.sh</code></li>\n<li>启动 Terminal Shell</li>\n<li>进入 Home/projects</li>\n<li>执行</li>\n</ol>\n<pre><code>$ sh atlas.clone.sh\n$ mv atlas.new atlas\n</code></pre>\n<h2>构建项目</h2>\n<pre><code>$ cd atlas\n$ sudo yarn build\n</code></pre>\n<blockquote>\n<p>如果 <code>websocket</code> 构建失败，必要时修改 <code>websocket</code> 源码和 <code>package.json</code>，去掉 <code>instrument</code> 和 <code>nodemon</code></p>\n</blockquote>\n<h2>启动项目</h2>\n<pre><code>sudo docker images\nsudo yarn start\nsudo docker ps\n</code></pre>\n<blockquote>\n<p>第一次启动因为需要下载 <code>influxdb</code> 和 <code>search</code> 镜像，会很慢</p>\n</blockquote>\n<h2>停止项目</h2>\n<pre><code>sudo yarn stop\n</code></pre>\n<h1>桌面应用</h1>\n<ol>\n<li>进入 <code>desktop/manager</code> 目录</li>\n<li>删掉 <code>package.lock</code></li>\n<li>编辑 <code>package.json</code></li>\n<li>删除 <code>electron</code></li>\n<li>安装其他依赖包 <code>yarn</code></li>\n<li>安装依赖包 <code>yarn add -D electron</code></li>\n<li>运行 <code>yarn start</code></li>\n<li>改造构建参数 <code>--platform=linux --arch=arm64</code></li>\n<li>构建桌面应用 <code>yarn build:&#x3C;???></code></li>\n<li>运行</li>\n</ol>\n<pre><code>$ cd ./dist/Manager-linux-arm64\n$ ./Manager\n</code></pre>"}},
    "staticQueryHashes": ["2877226700","3159585216","3659731985","3670619862"]}