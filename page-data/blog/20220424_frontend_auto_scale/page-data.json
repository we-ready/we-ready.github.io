{
    "componentChunkName": "component---src-templates-blog-js",
    "path": "/blog/20220424_frontend_auto_scale",
    "result": {"pageContext":{"frontmatter":{"id":"20220424_frontend_auto_scale","title":"前端自适应弹性布局","subtitle":"前端自适应弹性所需要了解的相关技术点","subject":"auto-scale","authors":"Chris Wei","keywords":"frontend;auto-scale","tags":"frontend;auto-scale","category":"概念理解","cover":"https://media.inkscape.org/media/resources/file/Koi_carp_2.svg","videos":null,"created_when":"2022-04-24T00:00:00.000Z","updated_when":"2022-04-24T00:00:00.000Z","level":100},"excerpt":"# CSS `Media` & `padding` tricky\n\n    import React from 'react';\n    import styled from 'styled-components';\n\n    const Wrapper = styled.section`\n      display: grid;\n      place-items: center;\n      height: 100vh;\n\n      background: #06f;\n      @media screen and (min-width: 800px) {\n        background: #0af;\n      }\n      @media screen and (min-width: 1280px) {\n        background: #0ff;\n      }\n    `\n\n    const Card = styled.div`\n      background: #fff;\n      height: 30vh;\n      border: 1px solid #f00;\n\n      margin: 0 auto;\n      width: calc(100% - 60px);\n      @media screen and (min-width: 800px) {\n        width: calc(100% - 120px);\n      }\n      @media screen and (min-width: 1280px) {\n        width: 800px;\n      }\n    `\n\n    const RatioFrame = styled.div`\n      background: #fff;\n      width: 50%;\n    `\n    const RatioPlaceHoder = styled.div`\n      padding: 0 0 150% 0;\n    `\n\n    function StyleMedia() {\n      return (\n        <Wrapper>\n          <h1>Auto Scale</h1>\n\n          <Card />\n\n          <RatioFrame>\n            <RatioPlaceHoder />\n          </RatioFrame>\n        </Wrapper>\n      );\n    }\n\n    export default StyleMedia;\n\n# CSS `min`, `max` & `clamp`\n","html":"<h1>CSS <code>Media</code> &#x26; <code>padding</code> tricky</h1>\n<pre><code>import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n  display: grid;\n  place-items: center;\n  height: 100vh;\n\n  background: #06f;\n  @media screen and (min-width: 800px) {\n    background: #0af;\n  }\n  @media screen and (min-width: 1280px) {\n    background: #0ff;\n  }\n`\n\nconst Card = styled.div`\n  background: #fff;\n  height: 30vh;\n  border: 1px solid #f00;\n\n  margin: 0 auto;\n  width: calc(100% - 60px);\n  @media screen and (min-width: 800px) {\n    width: calc(100% - 120px);\n  }\n  @media screen and (min-width: 1280px) {\n    width: 800px;\n  }\n`\n\nconst RatioFrame = styled.div`\n  background: #fff;\n  width: 50%;\n`\nconst RatioPlaceHoder = styled.div`\n  padding: 0 0 150% 0;\n`\n\nfunction StyleMedia() {\n  return (\n    &#x3C;Wrapper>\n      &#x3C;h1>Auto Scale&#x3C;/h1>\n\n      &#x3C;Card />\n\n      &#x3C;RatioFrame>\n        &#x3C;RatioPlaceHoder />\n      &#x3C;/RatioFrame>\n    &#x3C;/Wrapper>\n  );\n}\n\nexport default StyleMedia;\n</code></pre>\n<h1>CSS <code>min</code>, <code>max</code> &#x26; <code>clamp</code></h1>\n<pre><code>import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n  height: 100vh;\n  background: #06f;\n\n  /* display: grid;\n  place-items: center; */\n\n  @media screen and (min-width: 800px) {\n    background: #0af;\n  }\n  @media screen and (min-width: 1280px) {\n    background: #0ff;\n  }\n`\n\nconst Card = styled.div`\n  height: 30vh;\n  background: #fff;\n  margin: 0 auto;\n\n  /* width: 80%;\n  max-width: 800px; */\n\n  /* width: min(80%, 800px); */\n\n  width: clamp(600px, 90%, 1200px);\n`\n\nfunction StyleMinMax() {\n  return (\n    &#x3C;Wrapper>\n      &#x3C;h1>Auto Scale&#x3C;/h1>\n      &#x3C;Card>max-width&#x3C;/Card>\n    &#x3C;/Wrapper>\n  );\n}\n\nexport default StyleMinMax;\n\n</code></pre>\n<h1>CSS <code>REM</code> &#x26; <code>EM</code></h1>\n<pre><code>import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n  height: 100vh;\n  background: #09f;\n\n  display: grid;\n  place-items: center;\n`\n\nconst Card = styled.div`\n  height: 30vh;\n  background: #fff;\n  text-align: center;\n\n  font-size: 96px;\n  width: 5rem;\n`\n\nfunction StyleRem() {\n  return (\n    &#x3C;Wrapper>\n      &#x3C;h1>Auto Scale&#x3C;/h1>\n      &#x3C;Card>REM EM&#x3C;/Card>\n    &#x3C;/Wrapper>\n  );\n}\n\nexport default StyleRem;\n\n</code></pre>\n<h1>JS event listener</h1>\n<pre><code>import React, { useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n  height: 100vh;\n  font-size: 64px;\n  text-align: center;\n\n  display: grid;\n  place-items: center;\n`\n\nfunction JSCode() {\n  const [size, setSize] = useState({\n    width: document.documentElement.clientWidth,\n    height: document.documentElement.clientHeight,\n  })\n\n  const onResize = useCallback(() => {\n    setSize({\n      width: document.documentElement.clientWidth,\n      height: document.documentElement.clientHeight,\n    })\n  }, [])\n\n  useEffect(() => {\n    window.addEventListener('resize', onResize);\n    return(() => {\n      window.removeEventListener('resize', onResize);\n    })\n  }, [])\n\n  return (\n    &#x3C;Wrapper>\n      &#x3C;div>\n        &#x3C;h1>Auto Scale&#x3C;/h1>\n        &#x3C;p style={{\n          color: (size.width > 800) ? 'green' : 'blue'\n        }}>\n          size sensor:\n          {size.width} x {size.height}\n        &#x3C;/p>\n      &#x3C;/div>\n    &#x3C;/Wrapper>\n  );\n}\n\nexport default JSCode;\n\n</code></pre>\n<h1>html <code>flex</code> &#x26; <code>grid</code></h1>\n<pre><code>import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n  padding: 2rem;\n`\n\nconst Card = styled.div`\n  height: 98px;\n  background: #09f;\n  text-align: center;\n\n  font-size: 64px;\n  width: 98px;\n`\n\n// const List = styled.div`\n//   border: 1px solid #f00;\n\n//   display: flex;\n//   gap: 8px;\n//   flex-wrap: wrap;\n//   justify-content: space-between;\n// `\n\nconst List = styled.div`\n  border: 1px solid #f00;\n\n  display: grid;\n  grid-gap: 8px;\n  grid-template-columns: repeat(auto-fill, 98px);\n  justify-content: space-between;\n  align-content: start;\n`\n\nconst items = new Array(13).fill(' ')\nfunction Element() {\n  return (\n    &#x3C;Wrapper>\n      &#x3C;List>\n      { items.map((x, i) => (\n        &#x3C;Card key={i}>{i}&#x3C;/Card>\n      )) }\n      &#x3C;/List>\n    &#x3C;/Wrapper>\n  );\n}\n\nexport default Element;\n\n</code></pre>"}},
    "staticQueryHashes": ["2877226700","3159585216","3659731985","3670619862"]}