{
    "componentChunkName": "component---src-templates-blog-js",
    "path": "/blog/20210125_docker_compose",
    "result": {"pageContext":{"frontmatter":{"id":"20210125_docker_compose","title":"Docker Compose 的安装设置","subtitle":"CentOS 下 Docker 和 Docker Compose 的安装配置","subject":"开发环境","authors":"Chris Wei","keywords":"Docker;淘宝镜像;基本命令","tags":"Docker Compose","category":"指导手册","cover":"https://media.inkscape.org/media/resources/file/Koi_carp_2.svg","videos":null,"created_when":"2021-01-25T00:00:00.000Z","updated_when":"2022-03-27T00:00:00.000Z","level":100},"excerpt":"# Docker Compose 的安装设置\n\n# 参考文章\n","html":"<h1>Docker Compose 的安装设置</h1>\n<h2>参考文章</h2>\n<ul>\n<li><a href=\"https://docs.docker.com/engine/install/centos/\">Get Docker Engine - Community for CentOS</a></li>\n<li><a href=\"https://docs.docker.com/compose/install/\">Install Docker Compose</a></li>\n<li><a href=\"https://www.cnblogs.com/morang/p/9501223.html\">docker 及 docker-compose 的快速安装和简单使用</a></li>\n</ul>\n<h2>Install Docker</h2>\n<ol>\n<li>SET UP THE REPOSITORY</li>\n</ol>\n<pre><code>sudo yum install -y yum-utils device-mapper-persistent-data lvm2\nsudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n</code></pre>\n<ol start=\"2\">\n<li>INSTALL DOCKER ENGINE - COMMUNITY</li>\n</ol>\n<pre><code>sudo yum install docker-ce docker-ce-cli containerd.io\n</code></pre>\n<ol start=\"3\">\n<li>Start Docker &#x26; and set auto-start after server reboot</li>\n</ol>\n<pre><code>sudo systemctl start docker\n</code></pre>\n<pre><code>sudo systemctl enable docker.service\n</code></pre>\n<ol start=\"4\">\n<li>Verify that Docker Engine (<strong>Optional for pure install</strong>)</li>\n</ol>\n<pre><code>docker images\n\ndocker ps\n</code></pre>\n<ol start=\"5\">\n<li>Running the hello-world image (<strong>Optional for pure install</strong>)</li>\n</ol>\n<pre><code>sudo docker run hello-world\n</code></pre>\n<pre><code>docker images\ndocker ps\n</code></pre>\n<ol start=\"6\">\n<li>Running the whalesay image. (<strong>Optional for pure install</strong>)</li>\n</ol>\n<blockquote>\n<p><a href=\"https://hub.docker.com/r/docker/whalesay\">docker/whalesa</a></p>\n</blockquote>\n<pre><code>docker run docker/whalesay cowsay boo\n</code></pre>\n<pre><code>docker images\ndocker ps\ndocker ps -a\ndocker rm\ndocker rmi\n</code></pre>\n<h2>使用中国区官方镜像</h2>\n<ol>\n<li>create json file</li>\n</ol>\n<pre><code>vi /etc/docker/daemon.json\ncat /etc/docker/daemon.json\n</code></pre>\n<blockquote>\n<p>daemon.json</p>\n</blockquote>\n<pre><code>{\n  \"registry-mirrors\": [\"https://registry.docker-cn.com\"]\n}\n</code></pre>\n<ol start=\"2\">\n<li>restart docker</li>\n</ol>\n<pre><code>systemctl daemon-reload\nsystemctl restart docker\nsystemctl restart docker.service\n</code></pre>\n<ol start=\"3\">\n<li>reboot server</li>\n</ol>\n<pre><code>reboot\n</code></pre>\n<h2>Docker Compose</h2>\n<ol>\n<li>Download Docker Compose (with Daocloud Mirror)</li>\n</ol>\n<pre><code>sudo curl -L https://get.daocloud.io/docker/compose/releases/download/1.29.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose\n</code></pre>\n<ol start=\"2\">\n<li>Apply executable permissions to the binary:</li>\n</ol>\n<pre><code>sudo chmod +x /usr/local/bin/docker-compose\n</code></pre>\n<ol start=\"3\">\n<li>Verify that Docker Compose</li>\n</ol>\n<pre><code>docker-compose --version\n</code></pre>\n<h2>基本命令</h2>\n<h3>run - Run a container</h3>\n<ul>\n<li>tag</li>\n</ul>\n<pre><code># docker run redis:4.0\n</code></pre>\n<ul>\n<li>STDIN</li>\n<li>-it (interactive mode, attach terminal)</li>\n<li>attach / detach (-d)</li>\n<li>Port Mapping (external:internal)</li>\n</ul>\n<pre><code># docker run -p 8001:3000 xxxxx\n# docker run -p 8002:3000 xxxxx\n# docker run -p 8003:3000 xxxxx\n# docker run -p 8004:3000 xxxxx\n</code></pre>\n<ul>\n<li>Volume Mapping</li>\n</ul>\n<pre><code># docker run --name db_pg_1 -v /my/own/datadir:/var/lib/postgresql/data -d postgres\n</code></pre>\n<ul>\n<li>Environment Variables</li>\n</ul>\n<pre><code># docker run -e APP_COLOR=blue XXXX\n</code></pre>\n<h3>ps - List containers</h3>\n<h3>stop - Stop a container</h3>\n<h3>rm - Remove a container</h3>\n<h3>rmi - Remove images</h3>\n<h3>pull - Download an image</h3>\n<h3>exec - Execute a command</h3>\n<h3>attach - attach a container</h3>\n<h3>inspect - inspect a container</h3>\n<h3>logs - show container's log</h3>\n<h3>示例</h3>\n<pre><code># docker run centos\n# docker run -it centos bash\n# docker ps\n# docker ps -a\n# docker run centos sleep 20\n# docker run -d --name thistest centos sleep 100\n# docker exec thistest cat /etc/*release*\n# docker stop thistest\n# docker rm xxx xxx xxx\n# docker images\n# docker rmi xxxx\n# docker pull centos\n# docker inspect thistest\n# docker logs thistest\n</code></pre>\n<h2>典型镜像</h2>\n<h3>使用 Node:alpine 启动 js 脚本</h3>\n<pre><code># docker run -it --rm --name node_main_1 -v \"$PWD\":/usr/src/app -w /usr/src/app node:11.10.1-alpine node index.js\n</code></pre>\n<h3>使用 postgres:alpine 管理数据库</h3>\n<ol>\n<li>下载镜像</li>\n</ol>\n<pre><code># docker pull postgres:alpine\n</code></pre>\n<ol start=\"2\">\n<li>启动容器</li>\n</ol>\n<pre><code># docker run --name dbpg -e POSTGRES_PASSWORD=123456 -p 5432:5432 -d postgres:alpine\n</code></pre>\n<ol start=\"3\">\n<li>进入容器</li>\n</ol>\n<pre><code># docker exec -it dbpg /bin/bash\n</code></pre>\n<ol start=\"4\">\n<li>启动 psql</li>\n</ol>\n<pre><code>psql -U postgres -d postgres\n</code></pre>\n<h2>参考</h2>\n<ul>\n<li><a href=\"https://kodekloud.com/courses/296044\">Docker for the Absolute Beginner - Hands On</a></li>\n<li><a href=\"https://docs.docker.com/\">Docker Documents</a></li>\n<li><a href=\"https://www.jianshu.com/p/9ab7b89637e7\">docker实现postgresql</a></li>\n<li><a href=\"https://www.cnblogs.com/whych/p/9595671.html\">Docker网络和容器的通信</a></li>\n<li><a href=\"https://blog.csdn.net/u013355826/article/details/84987233\">docker中容器之间通信方式</a></li>\n<li><a href=\"https://www.cnblogs.com/neptunemoon/p/6512121.html#toc_30\">使用docker-compose 大杀器来部署服务</a></li>\n</ul>\n<h2>集成环境</h2>\n<h3>git</h3>\n<pre><code>yum install git\n</code></pre>\n<h3>安装 Nodejs</h3>\n<ol>\n<li>download and install npm binary pakage</li>\n</ol>\n<pre><code>wget https://nodejs.org/dist/v16.14.0/node-v16.14.0-linux-x64.tar.xz\ntar -xvf node-v16.14.0-linux-x64.tar.xz\nln -s ~/node-v16.14.0-linux-x64/bin/node /usr/bin/node\nln -s ~/node-v16.14.0-linux-x64/bin/npm /usr/bin/npm\nnpm -v\nnode -v\n</code></pre>\n<p>第一行代码可以使用国内镜像</p>\n<pre><code>wget https://npm.taobao.org/mirrors/node/v12.14.0/node-v12.14.0-linux-x64.tar.gz\n</code></pre>\n<blockquote>\n<p>install wget in case it is not installed</p>\n</blockquote>\n<pre><code>yum -y install wget\n</code></pre>\n<ol start=\"2\">\n<li>edit profile</li>\n</ol>\n<pre><code>vim /etc/profile\ncat /etc/profile\n</code></pre>\n<blockquote>\n<p>profile file content</p>\n</blockquote>\n<pre><code>export NODE_PATH=\"/root/node-v16.14.0-linux-x64\"\nexport PATH=$NODE_PATH/bin:$PATH\n</code></pre>\n<ol start=\"3\">\n<li>restart the server from console</li>\n</ol>\n<pre><code>reboot\n</code></pre>\n<ol start=\"4\">\n<li>install global npm packages</li>\n</ol>\n<pre><code>npm install -g yarn\n</code></pre>\n<blockquote>\n<p>out of date</p>\n</blockquote>\n<pre><code>npm install -g gulp\nnpm install -g cross-env\nnpm install -g rimraf\n</code></pre>\n<p>可以使用淘宝镜像</p>\n<pre><code>npm install xxxx -g --registry=http://registry.npm.taobao.org\n</code></pre>\n<h3>下载 Node 镜像</h3>\n<pre><code>docker pull node:16.14.0-alpine\ndocker pull redis:5.0.7-alpine\ndocker pull rabbitmq:3.8.2-alpine\ndocker pull postgres:12.1-alpine\ndocker pull influxdb:2.1.1\ndocker pull typesense/typesense:0.22.1\n</code></pre>\n<h3>创建项目目录</h3>\n<pre><code>mkdir projects\n</code></pre>\n<h3>创建克隆脚本</h3>\n<p><code>atlas.clone.sh</code></p>\n<h3>克隆并构建</h3>\n<pre><code>sh atlas.clone.sh\nmv atlas.new atlas\ncd atlas\nyarn build\n</code></pre>\n<h3>创建克隆脚本</h3>\n<pre><code></code></pre>\n<h2>替代安装方案（用于 Ubuntu）</h2>\n<blockquote>\n<p><a href=\"https://www.youtube.com/watch?v=-gF-Jsk85bQ\">https://www.youtube.com/watch?v=-gF-Jsk85bQ</a>\n<a href=\"https://github.com/devopsjourney1/influxdb-2-dockercompose\">https://github.com/devopsjourney1/influxdb-2-dockercompose</a></p>\n</blockquote>\n<pre><code>apt-get update -y\napt install docker.io -y &#x26;&#x26; apt install docker-compose -y\n</code></pre>"}},
    "staticQueryHashes": ["2877226700","3159585216","3659731985","3670619862"]}