{"componentChunkName":"component---src-templates-blog-js","path":"/blog/20210203101_github_actions","result":{"pageContext":{"frontmatter":{"id":"20210203101_github_actions","title":"github actions 101","subtitle":"如何利用 github actions 实现持续集成（CI）","subject":"devops","author":"Chis Wei","keywords":"持续集成","tags":"github;actions;CI","category":"概念理解","cover":"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSKdFw4iygh8LR1Can6DehP26aNujaBYtUdRg&usqp=CAU","created_when":"2021-02-03","updated_when":"2021-02-03","level":100},"excerpt":" github actions 101\n\n git repos\n","html":"<h1>github actions 101</h1>\n<h2>git repos</h2>\n<table>\n<thead>\n<tr>\n<th align=\"right\">repo</th>\n<th>作用</th>\n<th>性质</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"right\">blog</td>\n<td>构建博客站点</td>\n<td>public，博客源码</td>\n</tr>\n<tr>\n<td align=\"right\">argus</td>\n<td>demo</td>\n<td>private，前端演示代码</td>\n</tr>\n<tr>\n<td align=\"right\">we-ready.github.io</td>\n<td>博客发布</td>\n<td>public，github pages</td>\n</tr>\n</tbody>\n</table>\n<h2>github workflow</h2>\n<h3>步骤</h3>\n<h4>创建目标 <code>repo</code> 的 <code>access token</code></h4>\n<blockquote>\n<p><code>account profile</code> >>> <code>setting</code> >>> <code>developer setting</code> >>> <code>Personal access tokens</code> >>> <code>Generate new token</code></p>\n</blockquote>\n<blockquote>\n<p>不要急着关闭页面，生成的 <code>token</code> 在下一步要用</p>\n</blockquote>\n<h3>创建博客源 <code>repo</code> 的 <code>secrets</code></h3>\n<blockquote>\n<p><code>repo</code> >>> <code>setting</code> >>> <code>Secrets</code> >>> <code>New repository secret</code></p>\n</blockquote>\n<blockquote>\n<p>这里的 <code>secret</code> 名称是：<code>GIT_ACCESS_TOKEN_OF_WE_READY</code></p>\n</blockquote>\n<h3>创建 <code>github actions</code></h3>\n<blockquote>\n<p><code>repo</code> >>> <code>Actions</code> >>> <code>New workflow</code> >>> <code>Publish Node.js Package</code> <code>Set up this workflow</code></p>\n</blockquote>\n<blockquote>\n<p>用以下内容替换生成的 <code>yml</code> 文件内容，并根据实际情况，填入有效的 <code>[email address]</code> &#x26; <code>[account name]</code></p>\n</blockquote>\n<pre><code># This workflow will run tests using node and then publish a package to GitHub Packages when a release is created\n# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages\n\nname: Build All\n\non:\n  push:\n    branches:    \n      - release\n\njobs:\n  build:\n\n    runs-on: ubuntu-latest\n\n    strategy:\n      matrix:\n        node-version: [12.x]\n\n    steps:\n    - name: 1. Setup Node.js ${{ matrix.node-version }} ...\n      uses: actions/setup-node@v1\n      with:\n        node-version: ${{ matrix.node-version }}\n\n    - name: 2 Prepare empty folder ...\n      run:\n        mkdir output\n\n    - name: 3.1 Checkout blog source code ...\n      env:\n        REPO_TARGET: github.com/we-ready/blog.git\n      run:\n        git clone --depth=1 -b main https://${REPO_TARGET} ./blog\n\n    - name: 3.2 Build blog ...\n      env:\n        CI: false\n      run: |\n        cd ./blog\n        npm install\n        npm run build --if-present\n        rm -rf ./public/*.map\n        rm -rf ./public/*.txt\n        cd ../\n\n    - name: 3.3 Deploy result ...\n      run:\n        cp -r ./blog/public/. ./output\n\n    - name: 4.1 Checkout argus/storybook source code ...\n      env:\n        REPO_TARGET: github.com/we-ready/argus.git\n        GIT_ACCOUNT_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN_OF_WE_READY }}\n      run:\n        git clone --depth=1 -b main https://${GIT_ACCOUNT_TOKEN}@${REPO_TARGET} ./argus\n\n    - name: 4.2 Build argus/storybook ...\n      env:\n        CI: false\n      run: |\n        cd ./argus/npmlib/components/storybook\n        npm install\n        npm run build-storybook --if-present\n        mv ./storybook-static/index.html ./storybook-static/storybook.html\n        rm -rf ./storybook-static/*.map\n        rm -rf ./storybook-static/*.txt\n        cd ../../../../\n\n    - name: 4.3 Deploy result ...\n      run:\n        cp -r ./argus/npmlib/components/storybook/storybook-static/. ./output\n\n    - name: 5 Deploy to weready repo ...\n      env:\n        REPO_TARGET: github.com/we-ready/we-ready.github.io.git\n        GIT_ACCOUNT_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN_OF_WE_READY }}\n      run: |\n        git clone --depth=1 -b master https://${GIT_ACCOUNT_TOKEN}@${REPO_TARGET} ./weready\n        cd ./weready\n        find ! -regex '^./.git\\(/.*\\)?' -delete\n        cp -r ../output/. ./\n        git config --global user.email \"[email address]\"\n        git config --global user.name \"[account name]\"\n        git add -A\n        git commit -m \"Update by github workflow actions\"\n        git push origin master\n</code></pre>"}},"staticQueryHashes":["2718502863","3159585216","847266990"]}