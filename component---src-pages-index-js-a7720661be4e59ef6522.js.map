{"version":3,"sources":["webpack:///./src/layouts/section.jumbotron.js","webpack:///./src/layouts/section.bloglist.js","webpack:///./src/layouts/home.js","webpack:///./src/pages/index.js"],"names":["JumbotronArea","styled","div","Slogan","JumbotronSection","data","useStaticQuery","style","background","THEME","color","primary","border","ft","items","site","siteMetadata","navItems","width","display","justifyContent","title","description","src","jumbotron","alt","ListArea","size","sectionContainerWidthMax","CoverArea","TextArea","PaperFloat","Tags","BlogListSection","gitBlogs","allMarkdownRemark","nodes","filter","n","frontmatter","id","map","blog","index","cover","subtitle","author","subject","category","tags","keywords","created_when","ts","split","t","ks","k","tks","key","to","textDecoration","length","item","idx","HomeLayout","context","HomePage","head"],"mappings":"slCAMA,IAAMA,EAAgBC,IAAOC,IAAV,KA4BbC,EAASF,IAAOC,IAAV,KAwBG,SAASE,IACtB,IAAMC,EAAOC,YAAe,aAkB5B,OACE,kBAAC,IAAD,CAASC,MAAO,CAACC,WAAW,yBAA0BC,IAAMC,MAAMC,QAAQC,OAA/C,IAAyDH,IAAMC,MAAMC,QAAQE,GAA7E,MACzB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASH,MAAM,OAAOI,MAAOT,EAAKU,KAAKC,aAAaC,WAEpD,yBAAKV,MAAO,CAACW,MAAO,OAAQC,QAAS,OAAQC,eAAgB,WAC3D,yBAAKb,MAAO,CAACW,MAAO,QAASR,MAAO,SAClC,kBAAC,IAAD,CAASI,MAAOT,EAAKU,KAAKC,aAAaC,aAG3C,kBAACjB,EAAD,KACE,kBAACG,EAAD,KACE,4BAAKE,EAAKU,KAAKC,aAAaK,OAC5B,2BAAIhB,EAAKU,KAAKC,aAAaM,cAE7B,yBAAKC,IAAKlB,EAAKU,KAAKC,aAAaQ,UAAWC,IAAI,c,igDCrF1D,IAAMC,EAAWzB,IAAOC,IAAV,IACCO,IAAMkB,KAAKC,0BAUpBC,EAAY5B,IAAOC,IAAV,KAUT4B,EAAW7B,IAAOC,IAAV,KAqBR6B,EAAa9B,IAAOC,IAAV,KAmBV8B,EAAO/B,IAAOC,IAAV,KAkBK,SAAS+B,IAAmB,IAAD,EAClC5B,EAAOC,YAAe,cA0BtB4B,EAAW7B,SAAH,UAAGA,EAAM8B,yBAAT,aAAG,EAAyBC,MAAMC,QAAO,SAACC,GAAD,cAAS,UAACA,EAAEC,mBAAH,QAAC,EAAeC,OAChF,OACE,kBAAC,IAAD,KACE,kBAACd,EAAD,KACEQ,EAASO,KAAI,SAACC,EAAMC,GAAW,IAAD,EACmED,EAAKH,aAAe,GAA5GC,EADqB,EACrBA,GAAII,EADiB,EACjBA,MAAOvB,EADU,EACVA,MAAOwB,EADG,EACHA,SAAUC,EADP,EACOA,OAAQC,EADf,EACeA,QAASC,EADxB,EACwBA,SAAUC,EADlC,EACkCA,KAAMC,EADxC,EACwCA,SAAUC,EADlD,EACkDA,aACxEC,EAAMH,EAAgBA,EAAKI,MAAM,KAAKhB,QAAO,SAAAiB,GAAC,QAAMA,KAAnC,GACjBC,EAAML,EAAgBA,EAASG,MAAM,KAAKhB,QAAO,SAAAmB,GAAC,QAAMA,KAAvC,GACjBC,EAAI,GAAD,mBAAOL,GAAP,YAAcG,IACvB,OACE,kBAAC,IAAD,CAAMG,IAAKf,EAAOgB,GAAE,SAAWnB,EAAMjC,MAAO,CAACqD,eAAgB,SAC3D,kBAAC7B,EAAD,KACKa,EAAwB,kBAACf,EAAD,KAAW,yBAAKN,IAAKqB,EAAOnB,IAAI,WAAhD,+BACX,kBAACK,EAAD,KACE,4BAAOiB,EAAD,IAAuBC,EAAvB,IAAmC3B,EAAxBA,GACjB,4BAAKwB,GACL,kBAACb,EAAD,KAEkB,IAAfyB,EAAII,OAAgB,KAAOJ,EAAIhB,KAAI,SAACqB,EAAMC,GAAP,OAAgB,0BAAML,IAAKK,GAAMD,OAGvE,4BAAQX,EAAR,KAAyBL,W,gBChI5B,SAASkB,EAAT,GAAiC,IAAXC,EAAU,EAAVA,QACnC,OACA,oCACE,kBAAC,IAAD,CAAMA,QAASA,IAEf,kBAAC,IAAD,MACA,kBAAC,IAAD,MAEA,kBAAC7D,EAAD,MACA,kBAAC6B,EAAD,MACA,kBAAC,IAAD,O,UCZW,SAASiC,IACtB,OACE,kBAACF,EAAD,CAAYC,QAAS,CAAEE,KAAM,U","file":"component---src-pages-index-js-a7720661be4e59ef6522.js","sourcesContent":["import React from \"react\";\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\nimport styled from 'styled-components';\r\nimport { THEME } from '../config';\r\nimport { Section, CenterColumn, NavMenu, PopMenu } from '../components';\r\n\r\nconst JumbotronArea = styled.div`\r\n  width: 100%;\r\n  padding: 2em 0;\r\n\r\n  font-size: 16px;\r\n  line-height: 2em;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  & img {\r\n    width: 30%;\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    font-size: 12px;\r\n\r\n    flex-direction: column-reverse;\r\n    \r\n    & img {\r\n      width: 50%;\r\n    }\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    font-size: 10px;\r\n  }\r\n`;\r\nconst Slogan = styled.div`\r\n  width: 50%;\r\n  height: 100%;\r\n  margin: 0 2em;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  color: #e0e0e0;\r\n\r\n  & h1 {\r\n    line-height: 2.3em;\r\n    font-size: 2.8em;\r\n  }\r\n  & p {\r\n    font-size: 1.2em;\r\n    line-height: 1.6em;\r\n    letter-spacing: .1em;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nexport default function JumbotronSection() {\r\n  const data = useStaticQuery(graphql`\r\nquery {\r\n  site {\r\n    siteMetadata {\r\n      title\r\n      author\r\n      description\r\n      jumbotron\r\n      navItems {\r\n        key\r\n        url\r\n        text\r\n      }\r\n    }\r\n  }\r\n}\r\n  `);\r\n\r\n  return (\r\n    <Section style={{background: `linear-gradient(90deg,${THEME.color.primary.border},${THEME.color.primary.ft})` }}>\r\n      <CenterColumn>\r\n        <PopMenu color='#eee' items={data.site.siteMetadata.navItems} />\r\n\r\n        <div style={{width: '100%', display: 'flex', justifyContent: 'center'}}>\r\n          <div style={{width: '20rem', color: '#fff'}} >\r\n            <NavMenu items={data.site.siteMetadata.navItems} />\r\n          </div>\r\n        </div>\r\n        <JumbotronArea>\r\n          <Slogan>\r\n            <h1>{data.site.siteMetadata.title}</h1>\r\n            <p>{data.site.siteMetadata.description}</p>\r\n          </Slogan>\r\n          <img src={data.site.siteMetadata.jumbotron} alt='coding' />\r\n        </JumbotronArea>\r\n      </CenterColumn>\r\n    </Section>\r\n  )\r\n}\r\n","\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { Link, graphql, useStaticQuery } from 'gatsby';\r\nimport { THEME } from '../config';\r\nimport { Section } from '../components';\r\n\r\nconst ListArea = styled.div`\r\n  max-width: ${THEME.size.sectionContainerWidthMax};\r\n  margin: 0 auto;\r\n\r\n  font-size: 16px;\r\n  line-height: 2em;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 10px;\r\n  }\r\n`;\r\nconst CoverArea = styled.div`\r\n  width: 20%;\r\n  & img {\r\n    width: 100%;\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    width: 60%;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\nconst TextArea = styled.div`\r\n  & h2, h3, h4 {\r\n    color: #333;\r\n  }\r\n  & h1 {\r\n    color: #000;\r\n    font-size: 1.28em;\r\n  }\r\n  & h2 {\r\n    font-size: 1em;\r\n    font-weight: normal;\r\n  }\r\n  & h4 {\r\n    font-size: .9em;\r\n  }\r\n\r\n  @media screen and (max-width: 500px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst PaperFloat = styled.div`\r\n  margin: 1.6em;\r\n  padding: .5em 1em;\r\n  border-radius: 6px;\r\n  background-color: #fcfcfc;\r\n  box-shadow:\r\n    -3px -3px 7px rgba(255, 255, 255, .99),\r\n     3px  3px 5px rgba(94, 104, 121, .288);\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: row-reverse;\r\n  \r\n  @media screen and (max-width: 500px) {\r\n    flex-direction: column;\r\n  }\r\n\r\n`;\r\n\r\nconst Tags = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  & span {\r\n    margin: .2em 0;\r\n    padding: .1em .3em;\r\n    background-color: #bbb;\r\n    border-radius: 6%;\r\n    color: #fff;\r\n    white-space: nowrap;\r\n  }\r\n  & span + span {\r\n    margin-left: 1em;\r\n  }\r\n\r\n`;\r\n\r\nexport default function BlogListSection() {\r\n  const data = useStaticQuery(graphql`\r\nquery {\r\n  allMarkdownRemark {\r\n    nodes {\r\n      fields {\r\n        filename\r\n      }\r\n      frontmatter {\r\n        id\r\n        title\r\n        subtitle\r\n        subject\r\n        author\r\n        keywords\r\n        tags\r\n        category\r\n        created_when(formatString: \"YYYY-MM-DD\")\r\n        cover\r\n      }\r\n      excerpt(format: PLAIN, pruneLength: 60)\r\n      html\r\n    }\r\n  }\r\n}\r\n  `);\r\n\r\n  const gitBlogs = data?.allMarkdownRemark?.nodes.filter((n) => (!!n.frontmatter?.id));\r\n  return (\r\n    <Section>\r\n      <ListArea>\r\n      { gitBlogs.map((blog, index) => {\r\n          const {id, cover, title, subtitle, author, subject, category, tags, keywords, created_when } = blog.frontmatter || {};\r\n          const ts = !tags     ? [] : tags.split(';').filter(t => !!t);\r\n          const ks = !keywords ? [] : keywords.split(';').filter(k => !!k);\r\n          const tks= [ ...ts, ...ks];\r\n          return (\r\n            <Link key={index} to={`/blog/${id}`} style={{textDecoration: 'none'}}>\r\n              <PaperFloat>\r\n                { !cover ? <span></span> : <CoverArea><img src={cover} alt='cover' /></CoverArea> }\r\n                <TextArea>\r\n                  <h1>{ !subject ? title : `【${category}】${title}`}</h1>\r\n                  <h2>{subtitle}</h2>\r\n                  <Tags>\r\n                  { \r\n                    (tks.length === 0) ? null : tks.map((item, idx) => (<span key={idx}>{item}</span>))\r\n                  }\r\n                  </Tags>\r\n                  <h4>{`${created_when}  ${author}`}</h4>\r\n                </TextArea>\r\n              </PaperFloat>\r\n            </Link>\r\n          )\r\n      } ) }\r\n      </ListArea>\r\n    </Section>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Head, PageTopAnchor, ShortCutToTop } from '../components';\r\nimport JumbotronSection from './section.jumbotron';\r\nimport BlogListSection from './section.bloglist';\r\nimport FooterSection from './section.footer'; \r\n\r\nexport default function HomeLayout ({context}) {\r\n  return (\r\n  <>\r\n    <Head context={context} />\r\n\r\n    <PageTopAnchor />\r\n    <ShortCutToTop />\r\n\r\n    <JumbotronSection />\r\n    <BlogListSection />\r\n    <FooterSection />\r\n  </>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport HomeLayout from '../layouts/home';\r\nimport '../styles/index.css';\r\n\r\nexport default function HomePage() {\r\n  return (\r\n    <HomeLayout context={{ head: '首页' }} />\r\n  )\r\n}\r\n"],"sourceRoot":""}